{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n$(function () {\n\n  $(document).on(\"click\", \".btn-add\", function () {\n\n    var controlForm = $('tbody'),\n        currentEntry = $(this).parents('tbody tr:first'),\n        newEntry = $(currentEntry.clone()).appendTo(controlForm);\n    newEntry.find('input').val('');\n    controlForm.find('tr:not(:last) .buttons .btn-add').removeClass('btn-add').addClass('btn-remove').find(\".fa-plus\").removeClass(\"fa-plus\").addClass(\"fa-remove\");\n  }).on('click', '.btn-remove', function () {\n    $(this).parents('tr').remove();\n  });\n\n  $(document).on(\"click\", \"#selectall\", function () {\n\n    document.querySelectorAll('body #checkbox').forEach(function (item) {\n\n      item.checked = document.querySelector('#selectall').checked;\n    });\n  });\n\n  $(document).on(\"submit\", \"#editForm\", function (e) {\n\n    var str = \"\";\n    document.querySelectorAll('body #checkbox').forEach(function (item) {\n\n      if (item.checked) {\n        str += item.value + \",\";\n      }\n    });\n    $(\"#editForm #editids\").val(str);\n  });\n  $(\"#type_id\").on(\"change\", function () {\n    var not_found = false;\n    var date = $(\"#date\").val();\n    var type_id = $(\"#type_id\").val();\n    if (date == \"\") {\n      alert(\"Date Cannot be empty !\");\n      $(undefined).prop(\"selected\", false);\n      return;\n    }\n    waitingDialog.show('Waiting to fetch grant heads available');\n\n    $.ajaxSetup({\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      }\n    });\n\n    var controlForm = $('tbody'),\n        currentEntry = $(\"tbody\").find('tr:last'),\n        newEntry;\n\n    $.ajax({\n      url: global_grantHead_route,\n      type: \"post\",\n      data: { date: date, _method: \"POST\", type_id: type_id },\n      dataType: \"json\",\n      success: function success(data) {\n        $.each(data.grantHeads, function (index, item) {\n          console.log(data);\n          not_found = true;\n          if (index == 0) {\n            newEntry = controlForm.html(currentEntry.clone());\n          } else {\n            newEntry = $(currentEntry.clone()).appendTo(controlForm);\n          }\n          newEntry.find('#amount').val(item.credit == 0 ? item.debit : item.credit);\n          newEntry.find('#grant_id').val(item.grant_id).prop(\"selected\", true);\n          newEntry.find('#doc').val(item.credit == 0 ? \"0\" : \"1\").prop(\"selected\", true);\n\n          controlForm.find('tr:not(:last) .buttons .btn-add').removeClass('btn-add').addClass('btn-remove').find(\".fa-plus\").removeClass(\"fa-plus\").addClass(\"fa-remove\");\n        });\n        waitingDialog.hide();\n\n        if (!not_found) {\n          console.log(\"not found sorry \");\n          $.ajax({\n            url: global_grant_route,\n            type: \"post\",\n            dataType: \"json\",\n            success: function success(data) {\n\n              $.each(data.grants, function (index, item) {\n\n                if (index == 0) {\n                  newEntry = controlForm.html(currentEntry.clone());\n                } else {\n                  newEntry = $(currentEntry.clone()).appendTo(controlForm);\n                }\n                newEntry.find('#amount').val(\"\");\n                newEntry.find('#grant_id').val(item.id).prop(\"selected\", true);\n                controlForm.find('tr:not(:last) .buttons .btn-add').removeClass('btn-add').addClass('btn-remove').find(\".fa-plus\").removeClass(\"fa-plus\").addClass(\"fa-remove\");\n              });\n            },\n\n            error: function error(_error) {\n              console.log(_error);\n            }\n          });\n        }\n      },\n      error: function error(_error2) {\n        console.log(_error2);\n      }\n\n    });\n  });\n\n  /**\n   * Module for displaying \"Waiting for...\" dialog using Bootstrap\n   *\n   * @author Eugene Maslovich <ehpc@em42.ru>\n   */\n\n  var waitingDialog = waitingDialog || function ($) {\n    'use strict';\n\n    // Creating modal dialog's DOM\n\n    var $dialog = $('<div class=\"modal fade\" data-backdrop=\"static\" data-keyboard=\"false\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" style=\"padding-top:15%; overflow-y:visible;\">' + '<div class=\"modal-dialog modal-m\">' + '<div class=\"modal-content\">' + '<div class=\"modal-header\"><h3 style=\"margin:0;\"></h3></div>' + '<div class=\"modal-body\">' + '<div class=\"progress progress-striped active\" style=\"margin-bottom:0;\"><div class=\"progress-bar\" style=\"width: 100%\"></div></div>' + '</div>' + '</div></div></div>');\n\n    return {\n      /**\n       * Opens our dialog\n       * @param message Custom message\n       * @param options Custom options:\n       * \t\t\t\t  options.dialogSize - bootstrap postfix for dialog size, e.g. \"sm\", \"m\";\n       * \t\t\t\t  options.progressType - bootstrap postfix for progress bar type, e.g. \"success\", \"warning\".\n       */\n      show: function show(message, options) {\n        // Assigning defaults\n        if (typeof options === 'undefined') {\n          options = {};\n        }\n        if (typeof message === 'undefined') {\n          message = 'Loading';\n        }\n        var settings = $.extend({\n          dialogSize: 'm',\n          progressType: '',\n          onHide: null // This callback runs after the dialog was hidden\n        }, options);\n\n        // Configuring dialog\n        $dialog.find('.modal-dialog').attr('class', 'modal-dialog').addClass('modal-' + settings.dialogSize);\n        $dialog.find('.progress-bar').attr('class', 'progress-bar');\n        if (settings.progressType) {\n          $dialog.find('.progress-bar').addClass('progress-bar-' + settings.progressType);\n        }\n        $dialog.find('h3').text(message);\n        // Adding callbacks\n        if (typeof settings.onHide === 'function') {\n          $dialog.off('hidden.bs.modal').on('hidden.bs.modal', function (e) {\n            settings.onHide.call($dialog);\n          });\n        }\n        // Opening dialog\n        $dialog.modal();\n      },\n      /**\n       * Closes dialog\n       */\n      hide: function hide() {\n        $dialog.modal('hide');\n      }\n    };\n  }(jQuery);\n});\n\n},{}]},{},[1]);\n"],"file":"main.js"}